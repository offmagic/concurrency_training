Для запуска требуется jdk 1.8
Задания находятся в разных пакетах:
 1. training.concurrency.ex_1 Реализация FutureValue
 Всё тоже самое, только используются juc.Condition
 TestFutureValue - тестирует поведение

 2. training.concurrency.ex_2 Реализация BlockingStack
 Всё тоже самое, только используются juc.Condition
TestBlockingStack - тестирует поведение

 3. training.concurrency.ex_3 реализация кеша
  Основная идея заключается в том, что храним не само вычесленное значение, а FutureTask в ConcurrentHashMap (LoadableCacheImpl).
  Для удобства я обернул FutureTask (LazyLoadingValue). В данном классе содержатся методы по проверке истёк ли срок годности
  данного значение или нет, выполнения вычисления.

  Для проверки было создан Loader, который просто вычисляет квадрат числа и делает задержку в несколько секунд, для эмуляции
  долгого вычисления. Плюс если значения ключа равно 5 и номер попытки вычисления целое число - то выбрасываем исключения.
  Это позволяет протестировать, что позже другим потокам будет дана возможность вычислить значение.

  ConsumerTask - бесконечный цикл по считыванию значений из кеша(пвсевдорандомные ключи от 0 - 10)
  InvalidateTask - проверяет истёк ли срок годности значения, если да то происходит инвалидация.

  В тестовом примере:
  Срок годности значения 30 секунд
  Задержка при вычисления квадрата числа - 3 секунды
  10 потребителей кеша
  1 инвалидатор, который проверяет значения каждые 10 секунд

